/*
 * Default CSS theme for parce.
 *
 * Name "default"
 * Also serves as template for other themes.
 */


/*
 * Default style for a parce DIV or text editing window etc.
 */

/* Default */
.parce {
    background: ivory;
    color: black;
    font: monospace;
}

/* The line the cursor is in */
.parce.current-line {
    background: oldlace;
}

/* The current line when the window has focus */
.parce.current-line:focus {
    background: papayawhip;
}

/* Selected text */
.parce::selection {
    background: lightgray;
    color: white;
}

/* Selected text when the window has focus */
.parce::selection:focus {
    background: dodgerblue;
    color: white;
}

/* The current line when text widget is disabled
 * (probably unused normally)
 */
.parce.current-line:disabled {

}

.parce::selection:disabled {

}


/*
 * Styles for the base types
 */
.parce
.text {

}

.parce
.whitespace {

}

.parce
.keyword {
    font-weight: bold;
}

.parce
.delimiter {

}

.parce
.name {
    color: darkblue;
}

.parce
.literal {
    color: seagreen;
}

.parce
.comment {
    color: dimgray;
    font-family: serif;
    font-style: italic;
}

/*
 * Styles for the mixin types
 */
.parce
.alert {
    color: tomato;
    font-weight: bold;
}

.parce
.important {
    font-weight: bold;
}

.parce
.unimportant {

}

.parce
.special {
    color: darkgreen;
}

.parce
.definition {
    font-weight: bold;
}

.parce
.invalid {
    text-decoration: underline red solid;
}

.parce
.escape {
    font-weight: bold;
    color: darkcyan;
}

.parce
.template {
    font-weight: bold;
    color: green;
}

.parce
.pseudo {
    color: orange !important;
}

.parce
.preprocessed {
    color: green !important;
}

.parce
.inserted {

}

.parce
.deleted {

}

.parce
.quoted {

}

.parce
.bold {

}

.parce
.emphasized {

}

/* (Start, End, Indent and Dedent don't need styling) */
.parce
.start {

}

.parce
.end {

}

.parce
.indent {

}

.parce
.dedent {

}


/*
 * Styles for Name derivatives
 */
.parce
.attribute {
    color: dodgerblue;
}

.parce
.builtin {
    color: brown;
    font-weight: bold;
}

.parce
.class {
    color: blue;
}

.parce
.command {

}

.parce
.constant {
    color: darkmagenta;
}

.parce
.decorator {
    color: orange;
    font-weight: bold;
}

.parce
.entity {

}

.parce
.exception {
    color: crimson;
    font-weight: bold;
}

.parce
.function {

}

.parce
.identifier {
    color: brown;
}

.parce
.macro {

}

.parce
.markup {
    color: darkgreen;
}

.parce
.method {

}

.parce
.namespace {

}

.parce
.object {
    color: darkmagenta;
}

.parce
.property {
    color: royalblue;
}

.parce
.symbol {

}

.parce
.tag {
    font-weight: bold;
}

.parce
.type {

}

.parce
.variable {

}


/*
 * Styles for Literal derivatives
 */
.parce
.data {

}

.parce
.verbatim {

}

.parce
.string {
    color: firebrick;
}

.parce
.number {
    color: maroon;
}

.parce
.fraction {

}

.parce
.boolean {

}

.parce
.color {

}

.parce
.email {
    text-decoration: underline dodgerblue dashed;
}

.parce
.url {
    text-decoration: underline dodgerblue dashed;
}

.parce
.timestamp {

}

.parce
.input {

}

.parce
.output {

}

.parce
.error {

}

.parce
.prompt {

}

/*
 * String styles
 */
.parce
.string.double {

}

.parce
.string.single {

}

.parce
.string.escape {
    color: orangered;
}

/*
 * Styles for Delimiter derivatives
 */
.parce
.connection {

}

.parce
.direction {

}

.parce
.operator {

}

.parce
.assignment {

}

.parce
.bracket {
    font-weight: bold;
}

.parce
.modechange {
    font-weight: bold;
    color: chocolate;
}

.parce
.quote {

}

.parce
.separator {

}

